# Generated by Django 5.2.5 on 2025-09-28 18:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('internships', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('sections', models.JSONField(help_text='JSON structure defining report sections and fields', verbose_name='Report Sections')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('final', 'Final Evaluation')], default='monthly', max_length=20, verbose_name='Evaluation Period')),
                ('period_label', models.CharField(help_text='e.g., Week 1-4, Month 1, Q1 2025', max_length=100, verbose_name='Period Label')),
                ('technical_skills', models.PositiveIntegerField(help_text='Rate technical competency (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Technical Skills')),
                ('communication_skills', models.PositiveIntegerField(help_text='Rate communication abilities (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Communication Skills')),
                ('teamwork', models.PositiveIntegerField(help_text='Rate collaboration and teamwork (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Teamwork')),
                ('initiative', models.PositiveIntegerField(help_text='Rate proactiveness and initiative (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Initiative')),
                ('reliability', models.PositiveIntegerField(help_text='Rate dependability and reliability (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Reliability')),
                ('overall_performance', models.PositiveIntegerField(help_text='Overall performance rating (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Overall Performance')),
                ('strengths', models.TextField(help_text='What the intern does well', verbose_name='Strengths')),
                ('areas_for_improvement', models.TextField(help_text='Areas where the intern can improve', verbose_name='Areas for Improvement')),
                ('achievements', models.TextField(blank=True, help_text='Notable accomplishments during this period', verbose_name='Key Achievements')),
                ('recommendations', models.TextField(blank=True, help_text='Recommendations for future development', verbose_name='Recommendations')),
                ('goals_met', models.TextField(blank=True, help_text='Goals that were successfully achieved', verbose_name='Goals Met')),
                ('goals_next_period', models.TextField(blank=True, help_text='Suggested goals for the next evaluation period', verbose_name='Goals for Next Period')),
                ('would_recommend', models.BooleanField(default=True, help_text='Would you recommend this intern for future opportunities?', verbose_name='Would Recommend')),
                ('additional_comments', models.TextField(blank=True, help_text='Any additional feedback or comments', verbose_name='Additional Comments')),
                ('evaluation_date', models.DateField(verbose_name='Evaluation Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('intern', models.ForeignKey(limit_choices_to={'role': 'intern'}, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Intern')),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='internships.internship', verbose_name='Internship')),
                ('supervisor', models.ForeignKey(limit_choices_to={'role': 'supervisor'}, on_delete=django.db.models.deletion.CASCADE, related_name='conducted_evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Supervisor')),
            ],
            options={
                'verbose_name': 'Evaluation',
                'verbose_name_plural': 'Evaluations',
                'ordering': ['-evaluation_date'],
                'unique_together': {('intern', 'internship', 'period_type', 'period_label')},
            },
        ),
        migrations.CreateModel(
            name='InternReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of your report', max_length=200, verbose_name='Report Title')),
                ('period_label', models.CharField(help_text='e.g., Week 1, Month 1, Q1 2025', max_length=100, verbose_name='Reporting Period')),
                ('summary', models.TextField(help_text='Brief summary of your activities and achievements', verbose_name='Executive Summary')),
                ('activities_completed', models.TextField(help_text='Detailed description of tasks and activities completed', verbose_name='Activities Completed')),
                ('challenges_faced', models.TextField(blank=True, help_text='Any challenges or obstacles encountered', verbose_name='Challenges Faced')),
                ('solutions_implemented', models.TextField(blank=True, help_text='How you addressed the challenges', verbose_name='Solutions Implemented')),
                ('skills_learned', models.TextField(blank=True, help_text='New skills or knowledge acquired', verbose_name='Skills Learned')),
                ('goals_next_period', models.TextField(blank=True, help_text='What you plan to achieve in the next reporting period', verbose_name='Goals for Next Period')),
                ('self_rating', models.PositiveIntegerField(help_text='Rate your performance (1-5 scale)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Self Rating')),
                ('hours_worked', models.PositiveIntegerField(help_text='Total hours worked during this period', verbose_name='Hours Worked')),
                ('report_file', models.FileField(blank=True, help_text='Upload detailed report document (optional)', upload_to='reports/documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])], verbose_name='Report Document')),
                ('additional_files', models.FileField(blank=True, help_text='Any additional files or evidence', upload_to='reports/attachments/', verbose_name='Additional Files')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('reviewed', 'Reviewed'), ('needs_revision', 'Needs Revision')], default='draft', max_length=20)),
                ('supervisor_feedback', models.TextField(blank=True, help_text='Feedback from supervisor', verbose_name='Supervisor Feedback')),
                ('supervisor_rating', models.PositiveIntegerField(blank=True, help_text='Supervisor rating (1-5 scale)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Supervisor Rating')),
                ('review_date', models.DateTimeField(blank=True, null=True, verbose_name='Review Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Submitted At')),
                ('intern', models.ForeignKey(limit_choices_to={'role': 'intern'}, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_reports', to=settings.AUTH_USER_MODEL, verbose_name='Intern')),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='internships.internship', verbose_name='Internship')),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'supervisor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By')),
            ],
            options={
                'verbose_name': 'Intern Report',
                'verbose_name_plural': 'Intern Reports',
                'ordering': ['-created_at'],
                'unique_together': {('intern', 'internship', 'period_label')},
            },
        ),
    ]
